*toggle-terminal.txt*    Plugin to toggle a terminal window

CONTENTS                                                     *toggle-terminal*
Introduction ................ |toggle-terminal-introduction|
Commands .................... |toggle-terminal-commands|
Configuration ............... |toggle-terminal-configuration|


INTRODUCTION                                    *toggle-terminal-introduction*

Toggle-terminal is a plugin for nvim that can spone a terminal in a dedicated
buffer, display the terminal buffer is a split window, and toggle this window.
There can be only one terminal buffer that Toggle-terminal know about, called
"main terminal" through this documentation. If the main terminal is exited
(ie. the terminal processus ends), a new terminal instance will be created
next time toggle-terminal is summoned.

Features:

* create a main terminal buffer and open it in a new split window below the
  current one
* toggle the main terminal
* terminal buffer is unlisted (hidden  from `:ls` command)
* terminal background color can be different than normal background color


COMMANDS                           *:Toggleterminal*  *toggle-terminal-commands*

Toggle-terminal does not define any default keybindings for nvim. The command
|:Toggleterminal| does two things:

1. The first time it is called (or if the main terminal is exited): create a
   new buffer, open a terminal in this buffer and display the buffer in a
   split window below the current one
2. Every other times: toggle a split window displaying the main terminal

This command take optionally one argument: the relative height of the terminal
window.

NB: the cursor can be on any window to close the terminal window with
`:Toggleterminal`

Exemple:
>vim
    " Create a split window and open a new terminal.
    " When no argument is given to the toggle_window subcommand, it will use
    " the default `relative_height` that can be set through the setup function
    " (See CONFIGURATION below).
    :Terminal toggle_window

    " Close the window (the terminal will still run in the background)
    :Terminal toggle_window

    " Open the terminal again, this time occupying 80% of the current window
    :Terminal toggle_window 0.8

    " Close the terminal window again
    :Terminal toggle_window

    " Terminal buffer is unlisted
    :ls

    " You can see the terminal buffer this way
    :ls!
<

Another user subcommand |toggle_fullheight| allow the user to toggle the
terminal height when it's window is displayed. It will resize the terminal
window in such a way that it will occupy the maximum height (leaving only one
line for the top window). Note that the height is relative to the whole neovim
height (vim.o.lines) and not the height of the current window.

Exemple:

>vim
    " open a terminal window occupying 30% of the current height
    :Terminal toggle_window 0.3

    " 30% is not enough to see well... Let's increase the terminal height to
    " the maximum
    :Terminal toggle_fullheight

    " back to 30%
    :Terminal toggle_fullheight
<


CONFIGURATION                                  *toggle-terminal-configuration*

Default configuration:
>lua
    require("toggle-terminal").setup {}
<

Advanced configuration:
>lua
    require('toggle-terminal').setup {
        bg_color = '#000000',  -- main terminal background color
        startinsert = false,  -- start insert mode at term opening
        relative_height = 0.35,  -- relative height of the terminal window
        local_options = {
            number = false,  -- no number in main terminal window
            relativenumber = false,  -- no relative number in main terminal window
            cursorline = false,  -- cursor line in main terminal window
            colorcolumn = '',  -- color column
        }
    }
<

vim:tw=80:ts=2:et:ft=help:cc=+1:
